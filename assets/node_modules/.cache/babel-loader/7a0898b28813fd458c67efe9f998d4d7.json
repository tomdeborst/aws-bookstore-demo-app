{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.typeName = typeName;\nexports.spaces = spaces;\nexports.indent = indent;\nexports.debugNode = debugNode;\nexports.debugNodes = debugNodes;\n\nvar _lodash = require('lodash.escape');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _functionPrototype = require('function.prototype.name');\n\nvar _functionPrototype2 = _interopRequireDefault(_functionPrototype);\n\nvar _isString = require('is-string');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _isNumberObject = require('is-number-object');\n\nvar _isNumberObject2 = _interopRequireDefault(_isNumberObject);\n\nvar _isCallable = require('is-callable');\n\nvar _isCallable2 = _interopRequireDefault(_isCallable);\n\nvar _isBooleanObject = require('is-boolean-object');\n\nvar _isBooleanObject2 = _interopRequireDefault(_isBooleanObject);\n\nvar _objectInspect = require('object-inspect');\n\nvar _objectInspect2 = _interopRequireDefault(_objectInspect);\n\nvar _has = require('has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _RSTTraversal = require('./RSTTraversal');\n\nvar _getAdapter = require('./getAdapter');\n\nvar _getAdapter2 = _interopRequireDefault(_getAdapter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar booleanValue = Function.bind.call(Function.call, Boolean.prototype.valueOf);\n\nfunction typeName(node) {\n  var adapter = (0, _getAdapter2['default'])();\n\n  if (adapter.displayNameOfNode) {\n    return (0, _getAdapter2['default'])().displayNameOfNode(node) || 'Component';\n  }\n\n  return typeof node.type === 'function' ? node.type.displayName || (0, _functionPrototype2['default'])(node.type) || 'Component' : node.type;\n}\n\nfunction spaces(n) {\n  return Array(n + 1).join(' ');\n}\n\nfunction indent(depth, string) {\n  return string.split('\\n').map(function (x) {\n    return '' + String(spaces(depth)) + String(x);\n  }).join('\\n');\n}\n\nfunction propString(prop, options) {\n  if ((0, _isString2['default'])(prop)) {\n    return (0, _objectInspect2['default'])(String(prop), {\n      quoteStyle: 'double'\n    });\n  }\n\n  if ((0, _isNumberObject2['default'])(prop)) {\n    return '{' + String((0, _objectInspect2['default'])(Number(prop))) + '}';\n  }\n\n  if ((0, _isBooleanObject2['default'])(prop)) {\n    return '{' + String((0, _objectInspect2['default'])(booleanValue(prop))) + '}';\n  }\n\n  if ((0, _isCallable2['default'])(prop)) {\n    return '{' + String((0, _objectInspect2['default'])(prop)) + '}';\n  }\n\n  if ((typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) === 'object') {\n    if (options.verbose) {\n      return '{' + String((0, _objectInspect2['default'])(prop)) + '}';\n    }\n\n    return '{{...}}';\n  }\n\n  return '{[' + (typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) + ']}';\n}\n\nfunction propsString(node, options) {\n  var props = (0, _RSTTraversal.propsOfNode)(node);\n  var keys = Object.keys(props).filter(function (x) {\n    return x !== 'children';\n  });\n  return keys.map(function (key) {\n    return String(key) + '=' + String(propString(props[key], options));\n  }).join(' ');\n}\n\nfunction indentChildren(childrenStrs, indentLength) {\n  return childrenStrs.length ? '\\n' + String(childrenStrs.map(function (x) {\n    return indent(indentLength, x);\n  }).join('\\n')) + '\\n' : '';\n}\n\nfunction isRSTNodeLike(node) {\n  return (0, _has2['default'])(node, 'nodeType') && typeof node.nodeType === 'string' && (0, _has2['default'])(node, 'type') && (0, _has2['default'])(node, 'key') && (0, _has2['default'])(node, 'ref') && (0, _has2['default'])(node, 'instance') && (0, _has2['default'])(node, 'rendered');\n}\n\nfunction debugNode(node) {\n  var indentLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof node === 'string' || typeof node === 'number') return (0, _lodash2['default'])(node);\n\n  if (typeof node === 'function') {\n    var name = (0, _functionPrototype2['default'])(node);\n    return '[function' + (name ? ' ' + String(name) : '') + ']';\n  }\n\n  if (!node) return '';\n  var adapter = (0, _getAdapter2['default'])();\n\n  if (!adapter.isValidElement(node) && !isRSTNodeLike(node)) {\n    return '{' + String((0, _objectInspect2['default'])(node)) + '}';\n  }\n\n  var childrenStrs = (0, _RSTTraversal.childrenOfNode)(node).map(function (n) {\n    return debugNode(n, indentLength, options);\n  }).filter(Boolean);\n  var type = typeName(node);\n  var props = options.ignoreProps ? '' : propsString(node, options);\n  var beforeProps = props ? ' ' : '';\n  var afterProps = childrenStrs.length ? '>' : ' ';\n  var childrenIndented = indentChildren(childrenStrs, indentLength);\n  var nodeClose = childrenStrs.length ? '</' + String(type) + '>' : '/>';\n  return '<' + String(type) + beforeProps + String(props) + afterProps + String(childrenIndented) + nodeClose;\n}\n\nfunction debugNodes(nodes) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return nodes.map(function (node) {\n    return debugNode(node, undefined, options);\n  }).join('\\n\\n\\n');\n} //# sourceMappingURL=Debug.js.map","map":{"version":3,"sources":["../src/Debug.js"],"names":["booleanValue","Function","Boolean","typeName","adapter","node","spaces","Array","n","indent","String","quoteStyle","Number","options","props","keys","x","propString","childrenStrs","debugNode","indentLength","name","isRSTNodeLike","type","propsString","beforeProps","afterProps","childrenIndented","indentChildren","nodeClose","debugNodes"],"mappings":"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","sourcesContent":["import escape from 'lodash.escape';\nimport functionName from 'function.prototype.name';\nimport isString from 'is-string';\nimport isNumber from 'is-number-object';\nimport isCallable from 'is-callable';\nimport isBoolean from 'is-boolean-object';\nimport inspect from 'object-inspect';\nimport has from 'has';\n\nimport {\n  propsOfNode,\n  childrenOfNode,\n} from './RSTTraversal';\nimport getAdapter from './getAdapter';\n\nconst booleanValue = Function.bind.call(Function.call, Boolean.prototype.valueOf);\n\nexport function typeName(node) {\n  const adapter = getAdapter();\n  if (adapter.displayNameOfNode) {\n    return getAdapter().displayNameOfNode(node) || 'Component';\n  }\n  return typeof node.type === 'function'\n    ? (node.type.displayName || functionName(node.type) || 'Component')\n    : node.type;\n}\n\nexport function spaces(n) {\n  return Array(n + 1).join(' ');\n}\n\nexport function indent(depth, string) {\n  return string.split('\\n').map((x) => `${spaces(depth)}${x}`).join('\\n');\n}\n\nfunction propString(prop, options) {\n  if (isString(prop)) {\n    return inspect(String(prop), { quoteStyle: 'double' });\n  }\n  if (isNumber(prop)) {\n    return `{${inspect(Number(prop))}}`;\n  }\n  if (isBoolean(prop)) {\n    return `{${inspect(booleanValue(prop))}}`;\n  }\n  if (isCallable(prop)) {\n    return `{${inspect(prop)}}`;\n  }\n  if (typeof prop === 'object') {\n    if (options.verbose) {\n      return `{${inspect(prop)}}`;\n    }\n\n    return '{{...}}';\n  }\n  return `{[${typeof prop}]}`;\n}\n\nfunction propsString(node, options) {\n  const props = propsOfNode(node);\n  const keys = Object.keys(props).filter((x) => x !== 'children');\n  return keys.map((key) => `${key}=${propString(props[key], options)}`).join(' ');\n}\n\nfunction indentChildren(childrenStrs, indentLength) {\n  return childrenStrs.length\n    ? `\\n${childrenStrs.map((x) => indent(indentLength, x)).join('\\n')}\\n`\n    : '';\n}\n\nfunction isRSTNodeLike(node) {\n  return has(node, 'nodeType')\n    && typeof node.nodeType === 'string'\n    && has(node, 'type')\n    && has(node, 'key')\n    && has(node, 'ref')\n    && has(node, 'instance')\n    && has(node, 'rendered');\n}\n\nexport function debugNode(node, indentLength = 2, options = {}) {\n  if (typeof node === 'string' || typeof node === 'number') return escape(node);\n  if (typeof node === 'function') {\n    const name = functionName(node);\n    return `[function${name ? ` ${name}` : ''}]`;\n  }\n  if (!node) return '';\n\n  const adapter = getAdapter();\n  if (!adapter.isValidElement(node) && !isRSTNodeLike(node)) {\n    return `{${inspect(node)}}`;\n  }\n\n  const childrenStrs = childrenOfNode(node)\n    .map((n) => debugNode(n, indentLength, options))\n    .filter(Boolean);\n  const type = typeName(node);\n\n  const props = options.ignoreProps ? '' : propsString(node, options);\n  const beforeProps = props ? ' ' : '';\n  const afterProps = childrenStrs.length\n    ? '>'\n    : ' ';\n  const childrenIndented = indentChildren(childrenStrs, indentLength);\n  const nodeClose = childrenStrs.length ? `</${type}>` : '/>';\n  return `<${type}${beforeProps}${props}${afterProps}${childrenIndented}${nodeClose}`;\n}\n\nexport function debugNodes(nodes, options = {}) {\n  return nodes.map((node) => debugNode(node, undefined, options)).join('\\n\\n\\n');\n}\n"]},"metadata":{},"sourceType":"script"}