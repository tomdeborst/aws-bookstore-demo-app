{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = render;\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _getAdapter = require('./getAdapter');\n\nvar _getAdapter2 = _interopRequireDefault(_getAdapter);\n\nvar _Utils = require('./Utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/**\n * Renders a react component into static HTML and provides a cheerio wrapper around it. This is\n * somewhat asymmetric with `mount` and `shallow`, which don't use any external libraries, but\n * Cheerio's API is pretty close to what we actually want and has a significant amount of utility\n * that would be recreating the wheel if we didn't use it.\n *\n * I think there are a lot of good use cases to use `render` instead of `shallow` or `mount`, and\n * thus I'd like to keep this API in here even though it's not really \"ours\".\n *\n * @param node\n * @param options\n * @returns {Cheerio}\n */\n\n\nfunction render(node) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var adapter = (0, _getAdapter2['default'])(options);\n  var renderer = adapter.createRenderer((0, _object2['default'])({\n    mode: 'string'\n  }, options));\n  var html = renderer.render(node, options.context);\n  return (0, _Utils.loadCheerioRoot)(html);\n} //# sourceMappingURL=render.js.map","map":{"version":3,"sources":["../src/render.js"],"names":["render","options","adapter","renderer","mode","html"],"mappings":";;;;;qBAiBwBA,M;;;;;;AAjBxB,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;;;;;;AAEA;;;;;;;;;;;;;;;AAce,SAAA,MAAA,CAAA,IAAA,EAAoC;AAAA,MAAdC,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AACjD,MAAMC,OAAAA,GAAU,CAAA,GAAA,YAAA,CAAA,SAAA,CAAA,EAAhB,OAAgB,CAAhB;AACA,MAAMC,QAAAA,GAAWD,OAAAA,CAAAA,cAAAA,CAAAA,CAAAA,GAAAA,QAAAA,CAAAA,SAAAA,CAAAA,EAAAA;AAAyBE,IAAAA,IAAAA,EAAzBF;AAAAA,GAAAA,EAAjB,OAAiBA,CAAAA,CAAjB;AACA,MAAMG,IAAAA,GAAOF,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA,EAAsBF,OAAAA,CAAnC,OAAaE,CAAb;AACA,SAAO,CAAA,GAAA,MAAA,CAAA,eAAA,EAAP,IAAO,CAAP;AACD,C","sourcesContent":["import getAdapter from './getAdapter';\nimport { loadCheerioRoot } from './Utils';\n\n/**\n * Renders a react component into static HTML and provides a cheerio wrapper around it. This is\n * somewhat asymmetric with `mount` and `shallow`, which don't use any external libraries, but\n * Cheerio's API is pretty close to what we actually want and has a significant amount of utility\n * that would be recreating the wheel if we didn't use it.\n *\n * I think there are a lot of good use cases to use `render` instead of `shallow` or `mount`, and\n * thus I'd like to keep this API in here even though it's not really \"ours\".\n *\n * @param node\n * @param options\n * @returns {Cheerio}\n */\n\nexport default function render(node, options = {}) {\n  const adapter = getAdapter(options);\n  const renderer = adapter.createRenderer({ mode: 'string', ...options });\n  const html = renderer.render(node, options.context);\n  return loadCheerioRoot(html);\n}\n"]},"metadata":{},"sourceType":"script"}